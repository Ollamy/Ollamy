name: Build & Start Backend

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Docker
    env:
      BACKEND_PORT: ${{ secrets.BACKEND_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      PRISMA_STUDIO_PORT: ${{ secrets.PRISMA_STUDIO_PORT }}

    steps:

      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Build backend container
        id: build
        run: docker compose build backend

      - name: Run backend container
        id: run
        run: docker compose up -d backend

      - name: build openapi client generator
        id: build-openapi-client-generator
        run: |
          if [ $(curl -s -o /dev/null -w "%{http_code}" http://localhost:${{ secrets.BACKEND_PORT }}/health) -eq 200 ]; then
            docker compose exec backend yarn build:openapi-generator-cli
          else
            echo "Backend is not running"
            exit 0
          fi

      - name: Stop backend container
        id: stop
        run: docker compose down
