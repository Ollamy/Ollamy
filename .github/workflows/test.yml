name: Test & report backend results

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
      - development

jobs:
  build:
    if: github.event.pull_request.draft != true
    runs-on: self-hosted
    permissions:
      pull-requests: write
    environment: Docker
    env:
      BACKEND_PORT: ${{ secrets.BACKEND_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      PRISMA_STUDIO_PORT: ${{ secrets.PRISMA_STUDIO_PORT }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}

    strategy:
      matrix:
        node-version: [19.8.1]

    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install yarn
        run: npm install -g yarn

      - name: Install backend dependencies
        working-directory: ./packages/service-backend
        run: yarn install

      - name: Install prisma dependencies
        working-directory: ./packages/service-backend
        run: yarn prisma generate

      - name: Run backend tests
        working-directory: ./packages/service-backend
        run: yarn test:ci

      - name: list files
        working-directory: ./packages/service-backend
        if: success() || failure()
        run: ls -la

      - name: Upload test results
        id: upload-test-results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          working-directory: ./packages/service-backend
          name: Backend Test Results
          path: junit.xml
          reporter: jest-junit

      - name: Summary to PR
        id: summary-to-pr
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ## Test Results
            - **Conclusion:** ${{ steps.upload-test-results.outputs.conclusion }}
            - **Passed:** ${{ steps.upload-test-results.outputs.passed }}
            - **Failed:** ${{ steps.upload-test-results.outputs.failed }}
            - **Skipped:** ${{ steps.upload-test-results.outputs.skipped }}
            - **Time:** ${{ steps.upload-test-results.outputs.time }}
            - **URL:** ${{ steps.upload-test-results.outputs.url }}
            - **URL HTML:** ${{ steps.upload-test-results.outputs.url_html }}
