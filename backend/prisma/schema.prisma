generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MEMBER
  OWNER
  ADMIN
}

enum PermissionUser {
  READ
  WRITE
  DELETE
  PING
  ADMIN
}

enum PermissionCourse {
  READ
  WRITE
  DELETE
  PING
  ADMIN
}

enum PermissionSection {
  READ
  WRITE
  DELETE
  PING
}

enum PermissionChapter {
  READ
  WRITE
  DELETE
  PING
}

enum PermissionLesson {
  READ
  WRITE
  DELETE
  PING
}

model User {
  id             String         @id @default(uuid()) @db.Uuid
  firstname      String
  lastname       String
  email          String         @unique
  password       String
  communities_id String[]       @db.Uuid
  UsertoCourse   UsertoCourse[]
  Course         Course[]
}

model UsertoCourse {
  id                 String              @id @default(uuid()) @db.Uuid
  course             Course              @relation(references: [id], fields: [course_id], onDelete: Cascade)
  user               User                @relation(references: [id], fields: [user_id], onDelete: Cascade)
  role_user          Role                @default(MEMBER)
  permission_user    PermissionUser[]    @default([])
  permission_course  PermissionCourse[]  @default([])
  permission_section PermissionSection[] @default([])
  permission_chapter PermissionChapter[] @default([])
  permission_lesson  PermissionLesson[]  @default([])
  course_id          String              @db.Uuid
  user_id            String              @db.Uuid
}

model Course {
  id       String         @id @default(uuid()) @db.Uuid
  section  Section[]
  userlist UsertoCourse[]
  user     User           @relation(references: [id], fields: [owner_id], onDelete: Cascade)
  owner_id String         @db.Uuid
  role     Role
}

model Section {
  id        String    @id @default(uuid()) @db.Uuid
  course    Course    @relation(references: [id], fields: [course_id], onDelete: Cascade)
  course_id String    @db.Uuid
  Chapters  Chapter[]
}

model Chapter {
  id         String   @id @default(uuid()) @db.Uuid
  section    Section  @relation(references: [id], fields: [section_id], onDelete: Cascade)
  section_id String   @db.Uuid
  Lessons    Lesson[]
}

model Lesson {
  id         String  @id @default(uuid()) @db.Uuid
  chapter    Chapter @relation(references: [id], fields: [chapter_id], onDelete: Cascade)
  chapter_id String  @db.Uuid
}
